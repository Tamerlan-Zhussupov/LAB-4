import static org.junit.jupiter.api.Assertions.*;
import static org.junit.Assert.assertTrue;
import java.util.Arrays;
import java.util.Random;

import org.junit.Test;
public class main1Test
{
    @Test
    public void main1Test()
    {
        Integer[][] a = new Integer[12][15];
        Integer[] b = new Integer[15];
        Random rn = new Random();
        for (int i = 0; i < 12; i++) {
            for (int j = 0; j < 15; j++) {
                a[i][j] = rn.nextInt(100) - 50;
            }
        }
        int count = 0;
        for (int i = 0; i < 15; i++) {
            int sum = 0;
            for (int j = 0; j < 12; j++) {
                sum = sum + a[j][i];
            }
            b[i] = sum;
            for (int k = 0; k < 12; k++) {
                if (a[k][i] < sum) {
                    count++;
                }
            }
        }
        int max = b[0];
        int num = 0;
        for (int i = 0; i < 12; i++) {
            if (b[i] > max) {
                max = b[i];
                num = i + 1;
            }
        }
        main1<Integer> main = new main1<>();
        Integer arr1[] = {2, 4, 6, 8, 1, 3, 5, 7};
        Integer arr2[] = {5, 46, 25, 13, 12};
        Integer arr3[] = {5, 46};

        main.sort(arr1, true);
        assertTrue(Arrays.equals(arr1, new Integer[]{1, 2, 3, 4, 5, 6, 7, 8}));

        main.sort(arr1, false);
        assertTrue(Arrays.equals(arr1, new Integer[]{8, 7, 6, 5, 4, 3, 2, 1}));

        main.sort(arr2, true);
        assertTrue(Arrays.equals(arr2, new Integer[]{5, 12, 13, 25, 46}));

        main.sort(arr2, false);
        assertTrue(Arrays.equals(arr2, new Integer[]{46, 25, 13, 12, 5}));

        main.sort(arr3, true);
        assertTrue(Arrays.equals(arr3, new Integer[]{5, 46}));

        main.sort(arr3, false);
        assertTrue(Arrays.equals(arr3, new Integer[]{46, 5}));

        System.out.print("The test was successful!!!");
    }
}
